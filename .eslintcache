[{"C:\\Users\\danit\\OneDrive\\Escritorio\\U\\web\\simulacro-web\\src\\index.js":"1","C:\\Users\\danit\\OneDrive\\Escritorio\\U\\web\\simulacro-web\\src\\serviceWorkerRegistration.js":"2","C:\\Users\\danit\\OneDrive\\Escritorio\\U\\web\\simulacro-web\\src\\reportWebVitals.js":"3","C:\\Users\\danit\\OneDrive\\Escritorio\\U\\web\\simulacro-web\\src\\components\\moviesList.js":"4","C:\\Users\\danit\\OneDrive\\Escritorio\\U\\web\\simulacro-web\\src\\components\\movieDetail.js":"5","C:\\Users\\danit\\OneDrive\\Escritorio\\U\\web\\simulacro-web\\src\\components\\movie.js":"6","C:\\Users\\danit\\OneDrive\\Escritorio\\U\\web\\simulacro-web\\src\\components\\table.js":"7","C:\\Users\\danit\\OneDrive\\Escritorio\\U\\web\\simulacro-web\\src\\components\\navbar.js":"8"},{"size":1297,"mtime":1607124560515,"results":"9","hashOfConfig":"10"},{"size":5201,"mtime":1607115438453,"results":"11","hashOfConfig":"10"},{"size":377,"mtime":1607115438431,"results":"12","hashOfConfig":"10"},{"size":3768,"mtime":1607115438387,"results":"13","hashOfConfig":"14"},{"size":606,"mtime":1607115438385,"results":"15","hashOfConfig":"14"},{"size":560,"mtime":1607115438383,"results":"16","hashOfConfig":"14"},{"size":5785,"mtime":1607127387711,"results":"17","hashOfConfig":"10"},{"size":391,"mtime":1607124909172,"results":"18","hashOfConfig":"10"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"r07m06",{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"28"},"1u36gep",{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\danit\\OneDrive\\Escritorio\\U\\web\\simulacro-web\\src\\index.js",[],"C:\\Users\\danit\\OneDrive\\Escritorio\\U\\web\\simulacro-web\\src\\serviceWorkerRegistration.js",[],"C:\\Users\\danit\\OneDrive\\Escritorio\\U\\web\\simulacro-web\\src\\reportWebVitals.js",[],"C:\\Users\\danit\\OneDrive\\Escritorio\\U\\web\\simulacro-web\\src\\components\\moviesList.js",["37","38"],"import Movie from \"./movie\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport Table from 'react-bootstrap/Table';\r\nimport {FormattedMessage} from 'react-intl';\r\nimport Container from 'react-bootstrap/Container'\r\nimport Row from 'react-bootstrap/Row'\r\nimport Col from 'react-bootstrap/Col'\r\nimport Detail from './movieDetail'\r\nimport Navbar from 'react-bootstrap/Navbar'\r\n\r\nfunction MoviesList(props)  {\r\n\r\n    let [movies, setMovies] = useState([]);\r\n    let [movie, setMovie] = useState(null);\r\n\r\n    const url = props.lan === \"es\"? \"https://gist.githubusercontent.com/josejbocanegra/f784b189117d214578ac2358eb0a01d7/raw/2b22960c3f203bdf4fac44cc7e3849689218b8c0/data-es.json\"\r\n                : \"https://gist.githubusercontent.com/josejbocanegra/8b436480129d2cb8d81196050d485c56/raw/48cc65480675bf8b144d89ecb8bcd663b05e1db0/data-en.json\";\r\n\r\n    useEffect(()=>{\r\n        if(!navigator.onLine){\r\n            if(localStorage.getItem(\"movies\") === null) {\r\n                setMovies([])\r\n            } else {\r\n                setMovies(JSON.parse(localStorage.getItem(\"movies\")));\r\n            }\r\n            if(localStorage.getItem(\"movie\") === null) {\r\n                setMovie(null)\r\n            } else {\r\n                setMovie(JSON.parse(localStorage.getItem(\"movie\")));\r\n            }\r\n        } else {\r\n            fetch(url).then(res=>res.json()).then(res=>{\r\n                setMovies(res);\r\n                localStorage.setItem(\"movies\", JSON.stringify(res));\r\n            });\r\n        }\r\n    }, []);\r\n\r\n    function changeMovie(e) {\r\n        setMovie(e);\r\n        localStorage.setItem(\"movie\", JSON.stringify(e));\r\n    }\r\n\r\n    return (\r\n    <div>\r\n        <Container>\r\n            <Navbar bg=\"dark\" variant=\"dark\">\r\n                <Navbar.Brand href=\"#home\">\r\n                <img\r\n                    alt=\"\"\r\n                    src=\"/logo.svg\"\r\n                    width=\"30\"\r\n                    height=\"30\"\r\n                    className=\"d-inline-block align-top\"\r\n                />{' '}\r\n                React Bootstrap\r\n                </Navbar.Brand>\r\n            </Navbar>\r\n            <Row>\r\n                <Col>\r\n                    <Table striped hover>\r\n                    <thead>\r\n                        <tr>\r\n                        <th scope=\"col\">#</th>\r\n                        <th scope=\"col\"><FormattedMessage id=\"Name\"/></th>\r\n                        <th scope=\"col\"><FormattedMessage id=\"Directed by\"/></th>\r\n                        <th scope=\"col\"><FormattedMessage id=\"Country\"/></th>\r\n                        <th scope=\"col\"><FormattedMessage id=\"Budget\"/></th>\r\n                        <th scope=\"col\"><FormattedMessage id=\"Release\"/></th>\r\n                        <th scope=\"col\"><FormattedMessage id=\"Views\"/></th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {movies.map( (e) => \r\n                            <tr onClick={() => changeMovie(e)}>\r\n                                <th scope=\"row\">{e.id}</th>\r\n                                <td>{e.name}</td>\r\n                                <td>{e.directedBy}</td>\r\n                                <td>{e.country}</td>\r\n                                <td>{e.budget}</td>\r\n                                <td>{e.releaseDate}</td>\r\n                                <td>{e.views}</td>\r\n                            </tr>\r\n                        )}\r\n                    </tbody>\r\n                    </Table>\r\n                </Col>\r\n                {movie != null &&\r\n                    <Col>\r\n                        <Detail movie = {movie}></Detail>\r\n                    </Col>\r\n                }\r\n            </Row>\r\n        </Container>\r\n    </div>\r\n    );\r\n}\r\n\r\nexport default MoviesList;",["39","40"],"C:\\Users\\danit\\OneDrive\\Escritorio\\U\\web\\simulacro-web\\src\\components\\movieDetail.js",[],"C:\\Users\\danit\\OneDrive\\Escritorio\\U\\web\\simulacro-web\\src\\components\\movie.js",[],"C:\\Users\\danit\\OneDrive\\Escritorio\\U\\web\\simulacro-web\\src\\components\\table.js",["41","42"],"C:\\Users\\danit\\OneDrive\\Escritorio\\U\\web\\simulacro-web\\src\\components\\navbar.js",[],{"ruleId":"43","severity":1,"message":"44","line":1,"column":8,"nodeType":"45","messageId":"46","endLine":1,"endColumn":13},{"ruleId":"47","severity":1,"message":"48","line":37,"column":8,"nodeType":"49","endLine":37,"endColumn":10,"suggestions":"50"},{"ruleId":"51","replacedBy":"52"},{"ruleId":"53","replacedBy":"54"},{"ruleId":"43","severity":1,"message":"55","line":10,"column":10,"nodeType":"45","messageId":"46","endLine":10,"endColumn":15},{"ruleId":"47","severity":1,"message":"48","line":35,"column":8,"nodeType":"49","endLine":35,"endColumn":10,"suggestions":"56"},"no-unused-vars","'Movie' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'url'. Either include it or remove the dependency array.","ArrayExpression",["57"],"no-native-reassign",["58"],"no-negated-in-lhs",["59"],"'local' is defined but never used.",["60"],{"desc":"61","fix":"62"},"no-global-assign","no-unsafe-negation",{"desc":"61","fix":"63"},"Update the dependencies array to be: [url]",{"range":"64","text":"65"},{"range":"66","text":"65"},[1518,1520],"[url]",[1390,1392]]